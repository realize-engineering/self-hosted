{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template deploys an olli ec2 instance within a VPC.",
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "12d7e160-0a80-41e1-9076-14d9d321b425": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": -40
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "75ee4d4d-5387-4e64-a6e7-df69e2be9de2",
                    "0f44b41f-d758-4479-8a37-4cb92468693d"
                ],
                "dependson": ["2fdd17ad-0f65-46e0-9597-44875772b447"]
            },
            "75ee4d4d-5387-4e64-a6e7-df69e2be9de2": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 60
                },
                "z": 1,
                "embeds": []
            },
            "0f44b41f-d758-4479-8a37-4cb92468693d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 150,
                    "y": -80
                },
                "z": 1,
                "embeds": []
            },
            "af0c845b-f4f3-4d92-9488-ab4306d11151": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 120,
                    "y": 180
                },
                "z": 1,
                "embeds": []
            },
            "9f44a320-98cb-4f48-8843-8c51edd67f0b": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 560,
                    "y": 260
                },
                "z": 0,
                "embeds": []
            },
            "2fdd17ad-0f65-46e0-9597-44875772b447": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 330,
                    "y": 250
                },
                "z": 0,
                "embeds": [],
                "dependson": [
                    "af0c845b-f4f3-4d92-9488-ab4306d11151",
                    "a6609656-fabb-487f-a506-84b6271aa1e6"
                ]
            },
            "a6609656-fabb-487f-a506-84b6271aa1e6": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 610,
                    "y": 120
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": ["2fdd17ad-0f65-46e0-9597-44875772b447"]
            },
            "d7aa9df2-c6ef-4ebb-a91b-877dab996be9": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 444.7415429476021,
                    "y": -121.79635147244073
                },
                "z": 0,
                "embeds": []
            },
            "660d2149-d241-47bf-8d7f-9c839ac0cb09": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 585.2059129091086,
                    "y": -73.31749812289424
                },
                "z": 0,
                "embeds": []
            },
            "4c417d4a-8863-4ad1-adf3-f705de8cc96d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -20,
                    "y": -110
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": ["2fdd17ad-0f65-46e0-9597-44875772b447"]
            }
        }
    },
    "Resources": {
        "OlliSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-security-group-1"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "Enable the ports olli requires (80, 443, and 22)",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 0,
                        "ToPort": 65535,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "75ee4d4d-5387-4e64-a6e7-df69e2be9de2"
                }
            }
        },
        "OlliInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "12d7e160-0a80-41e1-9076-14d9d321b425"
                }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "VolumeSize": "20",
                            "DeleteOnTermination": "true",
                            "Encrypted": "true"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash -ex",
                                "apt-get update -y",
                                "apt install unzip -y",
                                "apt install docker.io -y",
                                "apt install -y debian-keyring debian-archive-keyring apt-transport-https",
                                "curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg",
                                "curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list",
                                "sudo apt update",
                                "sudo apt install caddy",
                                "cd /home/ubuntu && git clone https://github.com/realize-engineering/self-hosted && cd self-hosted",
                                "curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose",
                                "chmod +x /usr/local/bin/docker-compose",
                                "touch .env",
                                {
                                    "Fn::Sub": [
                                        "echo \"POSTGRES_USER=${POSTGRES_USER}\" >> .env",
                                        {
                                            "POSTGRES_USER": {
                                                "Ref": "databaseUsername"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "Fn::Sub": [
                                        "echo \"POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\" >> .env",
                                        {
                                            "POSTGRES_PASSWORD": {
                                                "Ref": "databasePassword"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "Fn::Sub": [
                                        "echo \"OPENAI_API_KEY=${OPENAI_API_KEY}\" >> .env",
                                        {
                                            "OPENAI_API_KEY": {
                                                "Ref": "openAPIKey"
                                            }
                                        }
                                    ]
                                },
                                "echo \"POSTGRES_DB=db\" >> .env",
                                {
                                    "Fn::Sub": [
                                        "echo \"AWS_REGION=${AWS_REGION}\" >> .env",
                                        {
                                            "AWS_REGION": {
                                                "Ref": "AWS::Region"
                                            }
                                        }
                                    ]
                                },
                                "echo \"BASE_URL=https://$(curl -s ifconfig.me).nip.io\" >> .env",
                                {
                                    "Fn::Sub": [
                                        "echo \"DATABASE_URL=${DATABASE_URL}\" >> .env",
                                        {
                                            "DATABASE_URL": {
                                                "Fn::Sub": [
                                                    "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/olli",
                                                    {
                                                        "POSTGRES_PASSWORD": {
                                                            "Ref": "databasePassword"
                                                        },
                                                        "POSTGRES_USER": {
                                                            "Ref": "databaseUsername"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "echo \"NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=1\" >> .env",
                                "echo \"STRIPE_SECRET_KEY=1\" >> .env",
                                "echo \"STRIPE_WEBHOOK_SECRET=1\" >> .env",
                                "echo \"STRIPE_PRO_PLAN_PRICE_ID=1\" >> .env",
                                "echo \"POSTMARK_SERVER_TOKEN=1\" >> .env",
                                "echo \"CONTEXT_ENABLED=true\" >> .env",
                                "echo \"POSTMARK_ACCOUNT_TOKEN=1\" >> .env",
                                "echo \"LOOPS_API_KEY=1\" >> .env",

                                {
                                    "Fn::Sub": [
                                        "echo 'SAMPLE_DATABASE_DETAILS={\"nickname\":\"sample_data\",\"host\":\"sample_data\",\"port\":5432,\"database\":\"sample_data\",\"username\":\"${POSTGRES_USER:-root}\",\"password\":\"${POSTGRES_PASSWORD:-root}\"}' >> .env",
                                        {
                                            "POSTGRES_PASSWORD": {
                                                "Ref": "databasePassword"
                                            },
                                            "POSTGRES_USER": {
                                                "Ref": "databaseUsername"
                                            }
                                        }
                                    ]
                                },

                                {
                                    "Fn::Sub": [
                                        "echo \"LICENSE_KEY=${LICENSE_KEY}\" >> .env",
                                        {
                                            "LICENSE_KEY": {
                                                "Ref": "licenseKey"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "Fn::Sub": [
                                        "echo \"PINECONE_API_KEY=${PINECONE_API_KEY}\" >> .env",
                                        {
                                            "PINECONE_API_KEY": {
                                                "Ref": "pineconeAPIKey"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "Fn::Sub": [
                                        "echo \"PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}\" >> .env",
                                        {
                                            "PINECONE_ENVIRONMENT": {
                                                "Ref": "pineconeEnvironment"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "Fn::Sub": [
                                        "echo \"PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME}\" >> .env",
                                        {
                                            "PINECONE_INDEX_NAME": {
                                                "Ref": "pineconeIndexName"
                                            }
                                        }
                                    ]
                                },
                                "echo \"REDIS_URL=redis://localhost:6379\" >> .env",
                                "echo \"NEXT_PUBLIC_POSTHOG_API_TOKEN=1\" >> .env",
                                "echo \"NEXT_PUBLIC_SENTRY_DSN=1\" >> .env",
                                "echo \"LOG_LEVEL=debug\" >> .env",
                                "echo \"QSTASH_CURRENT_SIGNING_KEY=1\" >> .env",
                                "echo \"QSTASH_NEXT_SIGNING_KEY=1\" >> .env",
                                "echo \"GOOGLE_OAUTH_CLIENT_ID=1\" >> .env",
                                "echo \"GOOGLE_OAUTH_CLIENT_SECRET=1\" >> .env",
                                "echo \"QSTASH_TOKEN=1\" >> .env",
                                "echo \"QSTASH_URL=1\" >> .env",
                                "echo \"GCLOUD_PROJECT_ID=1\" >> .env",
                                "echo \"GCLOUD_CLIENT_EMAIL=1\" >> .env",
                                "echo \"RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED=false\" >> .env",
                                "echo \"GCLOUD_PRIVATE_KEY=1\" >> .env",
                                "echo \"NEXT_PUBLIC_SENTRY_ENABLED=false\" >> .env",
                                "echo \"NEXT_PUBLIC_STRIPE_ENABLED=false\" >> .env",
                                "echo \"NEXT_PUBLIC_GOOGLE_SHEETS_ENABLED=false\" >> .env",
                                "echo \"STRIPE_BASIC_PLAN_PRICE_ID=1\" >> .env",
                                "echo \"NEXT_PUBLIC_BASIC_PLAN_DASHBOARD_CAP=1\" >> .env",
                                "echo \"NEXT_PUBLIC_BASIC_PLAN_QUESTIONS_CAP=10\" >> .env",
                                "sudo caddy stop",
                                "(sudo caddy reverse-proxy --from $(curl -s ifconfig.me).nip.io --to :3000 &) && (sudo docker-compose up -d)"
                            ]
                        ]
                    }
                },
                "KeyName": {
                    "Ref": "ec2KeyPair"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-olli-ec2-1"
                        }
                    }
                ],
                "ImageId": "ami-052efd3df9dad4825",
                "InstanceType": "t2.medium",
                "SecurityGroupIds": [
                    {
                        "Ref": "OlliSecurityGroup"
                    }
                ]
            },
            "DependsOn": ["OlliProvisionedUser"]
        },
        "OlliProvisionedUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "UserName": { "Fn::Sub": "${AWS::StackName}-olli-user-1" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-olli-user-1"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2fdd17ad-0f65-46e0-9597-44875772b447"
                }
            }
        }
    },
    "Mappings": {
        "DeploymentMapping": {
            "Details": {
                "version": "0.3.7",
                "type": "AWS_DEFAULT_VPC"
            }
        }
    },
    "Parameters": {
        "databaseUsername": {
            "Description": "Username for the olli instance's local psql database.",
            "Type": "String",
            "MinLength": 1,
            "Default": "olli"
        },
        "databasePassword": {
            "Description": "Password for the olli instance's local psql database.",
            "Type": "String",
            "MinLength": 7,
            "NoEcho": true
        },
        "licenseKey": {
            "Description": "License key for the olli instance.",
            "Type": "String",
            "MinLength": 1,
            "NoEcho": true
        },
        "ec2KeyPair": {
            "Description": "Key pair to access the box running Olli",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "MinLength": 1
        },
        "VPC": {
            "Description": "The VPC to run olli inside of",
            "Type": "AWS::EC2::VPC::Id",
            "MinLength": 1
        },
        "openAPIKey": {
            "Description": "Your OpenAI API secret key. This key must have gpt-4 access. Contact Olli team for further details.",
            "Type": "String",
            "MinLength": 1
        },
        "pineconeIndexName": {
            "Description": "The name of your pinecone index. Your index should use the cosine metric and have dimensions of 1536.",
            "Type": "String",
            "MinLength": 1
        },
        "pineconeAPIKey": {
            "Description": "The API Key of your pinecone index. Pinecone is used to help Olli learn about your data.",
            "Type": "String",
            "MinLength": 1
        },
        "pineconeEnvironment": {
            "Description": "The region of your pinecone index. E.g. production-12345.svc.<PINECONE_ENVIRONMENT>.pinecone.io",
            "Type": "String",
            "MinLength": 1
        }
    },
    "Outputs": {
        "YourOlliIP": {
            "Description": "IP address for your self-hosted Olli instance.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": ["OlliInstance", "PublicIp"]
                        },
                        ".nip.io"
                    ]
                ]
            }
        }
    }
}
